<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="registration.hospitalregistration.mapper.Imp.doctorMapper">
    <sql id="doctorSelect">
        select doctors.id
             , doctors.age
             , doctors.`name`
             , doctors.gender
             , doctors.birthday
             , doctors.technical
             , doctors.create_time
             , doctors.department_id
             , doctors.update_time
             , doctors.username
             , departments.`name` as department
        from doctors
                 inner join departments
    </sql>
    <!--    向数据库中添加医生的信息 name, gender, birthday, technical, departmentId, age, createTime-->
    <insert id="doctorInsert" parameterType="registration.hospitalregistration.pojo.Doctor">
        insert into doctors(name, gender, birthday, technical, username, department_id, age, create_time, update_time)
        values (#{name}, #{gender}, #{birthday}, #{technical}, #{username}, #{departmentId}, #{age}, now(), now())
    </insert>
<!--   更新医生-->
    <update id="doctorUpdate">
        update doctors
        <set>
            <if test="age != null">
                age=#{age},
            </if>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="gender != null">
                gender=#{gender},
            </if>
            <if test="birthday != null">
                birthday=#{birthday},
            </if>
            <if test="createTime != null">
                create_time=#{createTime},
            </if>
            <if test="technical != null and technical != ''">
                technical=#{technical},
            </if>
            <if test="departmentId != null">
                department_id=#{departmentId},
            </if>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
        <if test="updateTime != null">
            update_time=#{updateTime}
        </if>
        </set>
        where id = #{id}
    </update>
    <delete id="doctorDelete">
        delete from doctors where id=#{id}
    </delete>
    <!--    查询医生的基本信息-->
    <select id="doctorList" resultType="registration.hospitalregistration.pojo.Doctor">
        <include refid="doctorSelect"> </include>
        where doctors.department_id = departments.id
        order by update_time desc;
    </select>
    <!--    传入部门id返回该部门的所有医生信息（包括部门名称实际上部门名称大部分时间是用不到的，但是多传一个也没事，不多余）-->
    <select id="doctorListByDepartmentId" resultType="registration.hospitalregistration.pojo.Doctor">
        <include refid="doctorSelect">
            
        </include>
        <where>
            doctors.department_id = departments.id
            <if test="id != null">
                and doctors.department_id = #{id}
            </if>
        </where>
    </select>
    <select id="registrationList" resultType="registration.hospitalregistration.pojo.Registration_">
    </select>
    <!--    通过医生姓名模糊查询-->
    <select id="doctorListByName" resultType="registration.hospitalregistration.pojo.Doctor">
        <include refid="doctorSelect">

        </include>
        <where>
            doctors.department_id = departments.id
            <if test="name != null">
                and doctors.name like concat('%',#{name},'%')
            </if>
        </where>
    </select>
    <select id="doctorListByNameDepartmentId" resultType="registration.hospitalregistration.pojo.Doctor">
        <include refid="doctorSelect">

        </include>
        <where>
            doctors.department_id = departments.id
            <if test="id != null">
                and doctors.department_id = #{id}
            </if>
            <if test="name != null">
                and doctors.name like concat('%',#{name},'%');
            </if>
        </where>
    </select>
    <!--    通过病人id查询该病人的医生-->
    <select id="doctorListByPatientId" resultType="registration.hospitalregistration.pojo.Doctor">
        <include refid="doctorSelect">

        </include>
        Inner join registrations
        Inner join patients
        <where>
            departments.id = doctors.department_id
            and doctors.id = registrations.doctor_id and registrations.patient_id = patients.id
            <if test="id != null">
                and patients.id = #{id}
            </if>
        </where>
        order by registrations.update_time desc;
    </select>
    <select id="login" resultType="registration.hospitalregistration.pojo.Doctor">
        select * from doctors
        <where>
            <if test="username != null">
                username = #{username}
            </if>
            <if test="password != null">
                 and password = #{password}
            </if>
        </where>
    </select>
</mapper>
